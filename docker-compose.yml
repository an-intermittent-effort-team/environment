version: "3"

networks:
  api:

volumes:
  esdata:
    driver: local

services:

#  redis:
#    image: redis:${REDIS_VERSION}
#    container_name: redis
#    networks:
#      - api
#    volumes:
#      - ${REDIS_CONF_FILE}:/etc/redis/redis.conf:ro
#      #- ../redis/data:/data
#    command: ["redis-server", "/etc/redis/redis.conf"]
#    ports:
#      - "${REDIS_HOST_PORT}:6379"

  mysql:
    image: mysql:${MYSQL_VERSION_DEFAULT}
    container_name: mysql
    networks:
      - api
    #volumes:
      #- ${MYSQL_CONF_FILE}:/etc/mysql/my.cnf:ro
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "${MYSQL_HOST_PORT}:3306"

  phpfpm:
    image: php:${PHP_VERSION}
    #    build:
    #      context: ./php-fpm
    container_name: phpfpm
    networks:
      - api
    expose:
      - 9001
    restart: always
    volumes:
      - ${API_PATH}/:/opt/www/:rw
      - ${PHP_PHP_INI_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP_FPM_CONF_FILE}:/usr/local/etc/php/php-fpm.conf:rw
      - ${PHP_FPM_CONF_POOL_FILE}:/usr/local/etc/php/pool.d/:rw
    cap_add:
      - SYS_PTRACE
  #    stdin_open: true
  #    tty: true


#    php:
#      build:
#        context: ./services
#        args:
#          PHP_VERSION: php:${PHP_VERSION}-fpm-alpine
#          CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
#          PHP_EXTENSIONS: ${PHP_EXTENSIONS}
#          TZ: "$TZ"
#      container_name: php


  nginx:
    image: nginx:${NGINX_VERSION}
    container_name: nginx
    networks:
      - api
    volumes:
      - ${API_PATH}/:/opt/www/:rw
      - ./data/nginx/:/var/log/nginx/:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_CONF_DIR}:/etc/nginx/conf.d/:rw
    ports:
      - "${NGINX_PORT}:80"


#  jenkins:
#    image: jenkins/jenkins:${JENKINS_VERSION}
#    container_name: jenkins
#    user: root
#    networks:
#      - api
#    volumes:
#      - ./data/jenkins/:/var/jenkins_home
#      #- /var/run/docker.sock:/var/run/docker.sock
#      #- /usr/bin/docker:/usr/bin/docker
#    ports:
#      - "${JENKINS_HOST_PORT}:8080"
#      - "${JENKINS_HOST_SLAVE_PORT}:50000"

  kibana:
    image: kibana:${KIBANA_VERSION}
    container_name: kibana
    environment:
      - I18N_LOCALE=zh-CN
      - XPACK_GRAPH_ENABLED=true
      - TIMELION_ENABLED=true
      - XPACK_MONITORING_COLLECTION_ENABLED="true"
    ports:
      - "${KIBANA_HOST_PORT}:5601"
    networks:
      - api

  elasticsearch:
    image: elasticsearch:${ES_VERSION}
    container_name: elasticsearch
    environment:
      - cluster.name=mellos
      - node.name=es73
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.seed_hosts=es73
      - cluster.initial_master_nodes=es73
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "${ES_HOST_PORT}:9200"
    networks:
      - api

  cerebro:
    image: lmenezes/cerebro:${CEREBRO_VERSION}
    container_name: cerebro
    ports:
      - "${CEREBRO_HOST_PORT}:9800"
    command:
      - -Dhosts.0.host=http://elasticsearch:9200
    networks:
      - api